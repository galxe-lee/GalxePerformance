// Creator: k6 Browser Recorder 0.6.2

import { sleep, group } from "k6";
import http from "k6/http";

export const options = {
  //定义一组测试场景，名称为:Scenario_1
  scenarios: {
    Scenario_1: {
      //表示该场景使用“逐步增加虚拟用户”的执行器
      executor: "ramping-vus",
      //表示在测试完成后，虚拟用户将在30秒内逐渐停止
      gracefulStop: "30s",
      stages: [
        { target: 100, duration: "1m" },
        { target: 100, duration: "3m30s" },
        { target: 0, duration: "1m" },
      ],
      //表示在任何阶段结束后，已存在的虚拟用户将在30秒内逐渐停止。
      gracefulRampDown: "30s",
      //指定当该场景运行时应执行哪个函数
      exec: "scenario_1",
    },
  },
  ext: {
    loadimpact: {
      distribution: {
        "amazon:us:ashburn": { loadZone: "amazon:us:ashburn", percent: 100 },
      },
    },
  },
};

export function scenario_1() {
  let response;

  group("page_1 - https://galxe.com/", function () {
    response = http.get("https://galxe.com/", {
      headers: {
        "upgrade-insecure-requests": "1",
        "sec-ch-ua":
          '"Google Chrome";v="117", "Not;A=Brand";v="8", "Chromium";v="117"',
        "sec-ch-ua-mobile": "?0",
        "sec-ch-ua-platform": '"macOS"',
      },
    });
    sleep(5.4);

    response = http.get("https://galxe.com/", {
      headers: {
        "upgrade-insecure-requests": "1",
        "sec-ch-ua":
          '"Google Chrome";v="117", "Not;A=Brand";v="8", "Chromium";v="117"',
        "sec-ch-ua-mobile": "?0",
        "sec-ch-ua-platform": '"macOS"',
      },
    });
    sleep(1.3);

    response = http.post(
      "https://graphigo.prd.galaxy.eco/query",
      '{"operationName":"HomePageList","variables":{"address":"","webObjectsInput":{"first":50,"categories":["BANNER","CHOICES","SPACES","MISSION_WEB3"]},"forYouInput":{"first":50,"claimableByUser":null},"mostPeopleInput":{"first":9,"listType":"Trending","startTimeLastWeek":true},"layerZeroInput":{"first":9,"ids":["GC3FtU9rX3","GCfBwU93VV","GC7xXUsyme","GCCwCUPmQ3","GCqC4UjUhW","GC8fTU93Tq","GC7zTU9Wm5"]},"missionWeb3Input":{"first":50},"discordRoleInput":{"first":9,"listType":"Trending","types":["DiscordRole"],"statuses":["Active"]},"mintlistInput":{"first":9,"listType":"Trending","types":["Mintlist"],"statuses":["Active"]},"tokenRewardInput":{"first":9,"types":["Token"],"orderByTokenValue":true,"statuses":["Active"]},"spaceCampaignsInput":{"statuses":["Active"]}},"query":"query HomePageList($webObjectsInput: WebObjectsInput!, $forYouInput: ListCampaignInput!, $mostPeopleInput: ListCampaignInput!, $layerZeroInput: ListCampaignInput!, $discordRoleInput: ListCampaignInput!, $mintlistInput: ListCampaignInput!, $tokenRewardInput: ListCampaignInput!, $spaceCampaignsInput: ListCampaignInput!, $missionWeb3Input: ListCampaignInput!, $address: String!) {\\n  webObjects(input: $webObjectsInput) {\\n    category\\n    type\\n    order\\n    title\\n    url\\n    image\\n    description\\n    date\\n    isNew\\n    space {\\n      id\\n      name\\n      thumbnail\\n      alias\\n      isVerified\\n      backers\\n      campaigns(input: $spaceCampaignsInput) {\\n        totalCount\\n        __typename\\n      }\\n      categories\\n      isFollowing\\n      __typename\\n    }\\n    campaign {\\n      id\\n      numberID\\n      name\\n      ...CampaignSnap\\n      childrenCampaigns {\\n        id\\n        type\\n        rewardName\\n        claimedLoyaltyPoints(address: $address)\\n        rewardInfo {\\n          discordRole {\\n            guildId\\n            guildName\\n            roleId\\n            roleName\\n            inviteLink\\n            __typename\\n          }\\n          __typename\\n        }\\n        __typename\\n      }\\n      coHostSpaces {\\n        id\\n        name\\n        thumbnail\\n        alias\\n        isVerified\\n        __typename\\n      }\\n      participants {\\n        participantsCount\\n        __typename\\n      }\\n      tokenRewardContract {\\n        id\\n        address\\n        chain\\n        __typename\\n      }\\n      space {\\n        id\\n        name\\n        thumbnail\\n        alias\\n        isVerified\\n        __typename\\n      }\\n      tokenReward {\\n        userTokenAmount\\n        tokenAddress\\n        depositedTokenAmount\\n        tokenRewardId\\n        tokenDecimal\\n        tokenLogo\\n        tokenSymbol\\n        __typename\\n      }\\n      recurringType\\n      loyaltyPoints\\n      __typename\\n    }\\n    __typename\\n  }\\n  forYouCampaigns: campaigns(input: $forYouInput) {\\n    list {\\n      ...CampaignSnap\\n      id\\n      cap\\n      numberID\\n      name\\n      childrenCampaigns {\\n        id\\n        type\\n        __typename\\n      }\\n      thumbnail\\n      chain\\n      numNFTMinted\\n      tokenRewardContract {\\n        id\\n        address\\n        chain\\n        __typename\\n      }\\n      tokenReward {\\n        userTokenAmount\\n        tokenAddress\\n        depositedTokenAmount\\n        tokenRewardId\\n        tokenDecimal\\n        tokenLogo\\n        tokenSymbol\\n        __typename\\n      }\\n      space {\\n        id\\n        name\\n        thumbnail\\n        alias\\n        isVerified\\n        __typename\\n      }\\n      rewardInfo {\\n        discordRole {\\n          guildId\\n          guildName\\n          roleId\\n          roleName\\n          inviteLink\\n          __typename\\n        }\\n        __typename\\n      }\\n      participants {\\n        participantsCount\\n        __typename\\n      }\\n      recurringType\\n      __typename\\n    }\\n    __typename\\n  }\\n  layerZeroCampaigns: campaigns(input: $layerZeroInput) {\\n    list {\\n      ...CampaignSnap\\n      id\\n      cap\\n      name\\n      loyaltyPoints\\n      childrenCampaigns {\\n        id\\n        type\\n        __typename\\n      }\\n      thumbnail\\n      chain\\n      numNFTMinted\\n      tokenRewardContract {\\n        id\\n        address\\n        chain\\n        __typename\\n      }\\n      tokenReward {\\n        userTokenAmount\\n        tokenAddress\\n        depositedTokenAmount\\n        tokenRewardId\\n        tokenDecimal\\n        tokenLogo\\n        tokenSymbol\\n        __typename\\n      }\\n      space {\\n        id\\n        name\\n        thumbnail\\n        alias\\n        isVerified\\n        __typename\\n      }\\n      rewardInfo {\\n        discordRole {\\n          guildId\\n          guildName\\n          roleId\\n          roleName\\n          inviteLink\\n          __typename\\n        }\\n        __typename\\n      }\\n      participants {\\n        participantsCount\\n        __typename\\n      }\\n      recurringType\\n      __typename\\n    }\\n    __typename\\n  }\\n  mostPeopleCampaigns: campaigns(input: $mostPeopleInput) {\\n    list {\\n      ...CampaignSnap\\n      id\\n      cap\\n      name\\n      loyaltyPoints\\n      childrenCampaigns {\\n        id\\n        type\\n        __typename\\n      }\\n      thumbnail\\n      chain\\n      numNFTMinted\\n      tokenRewardContract {\\n        id\\n        address\\n        chain\\n        __typename\\n      }\\n      tokenReward {\\n        userTokenAmount\\n        tokenAddress\\n        depositedTokenAmount\\n        tokenRewardId\\n        tokenDecimal\\n        tokenLogo\\n        tokenSymbol\\n        __typename\\n      }\\n      space {\\n        id\\n        name\\n        thumbnail\\n        alias\\n        isVerified\\n        __typename\\n      }\\n      rewardInfo {\\n        discordRole {\\n          guildId\\n          guildName\\n          roleId\\n          roleName\\n          inviteLink\\n          __typename\\n        }\\n        __typename\\n      }\\n      participants {\\n        participantsCount\\n        __typename\\n      }\\n      recurringType\\n      __typename\\n    }\\n    __typename\\n  }\\n  discordRoleCampaigns: campaigns(input: $discordRoleInput) {\\n    list {\\n      ...CampaignSnap\\n      id\\n      cap\\n      name\\n      loyaltyPoints\\n      childrenCampaigns {\\n        id\\n        type\\n        __typename\\n      }\\n      thumbnail\\n      chain\\n      numNFTMinted\\n      space {\\n        id\\n        name\\n        thumbnail\\n        alias\\n        isVerified\\n        __typename\\n      }\\n      rewardInfo {\\n        discordRole {\\n          guildId\\n          guildName\\n          roleId\\n          roleName\\n          inviteLink\\n          __typename\\n        }\\n        __typename\\n      }\\n      participants {\\n        participantsCount\\n        __typename\\n      }\\n      recurringType\\n      __typename\\n    }\\n    __typename\\n  }\\n  mintlist: campaigns(input: $mintlistInput) {\\n    list {\\n      ...CampaignSnap\\n      id\\n      cap\\n      name\\n      loyaltyPoints\\n      childrenCampaigns {\\n        id\\n        type\\n        __typename\\n      }\\n      thumbnail\\n      chain\\n      numNFTMinted\\n      space {\\n        id\\n        name\\n        thumbnail\\n        alias\\n        isVerified\\n        __typename\\n      }\\n      rewardInfo {\\n        premint {\\n          startTime\\n          endTime\\n          chain\\n          price\\n          totalSupply\\n          contractAddress\\n          banner\\n          __typename\\n        }\\n        __typename\\n      }\\n      participants {\\n        participantsCount\\n        __typename\\n      }\\n      recurringType\\n      __typename\\n    }\\n    __typename\\n  }\\n  tokenRewardCampaigns: campaigns(input: $tokenRewardInput) {\\n    list {\\n      ...CampaignSnap\\n      id\\n      cap\\n      name\\n      childrenCampaigns {\\n        id\\n        type\\n        __typename\\n      }\\n      thumbnail\\n      chain\\n      numNFTMinted\\n      tokenRewardContract {\\n        id\\n        address\\n        chain\\n        __typename\\n      }\\n      tokenReward {\\n        userTokenAmount\\n        tokenAddress\\n        depositedTokenAmount\\n        tokenRewardId\\n        tokenDecimal\\n        tokenLogo\\n        tokenSymbol\\n        __typename\\n      }\\n      space {\\n        id\\n        name\\n        thumbnail\\n        alias\\n        isVerified\\n        __typename\\n      }\\n      rewardInfo {\\n        discordRole {\\n          guildId\\n          guildName\\n          roleId\\n          roleName\\n          inviteLink\\n          __typename\\n        }\\n        __typename\\n      }\\n      participants {\\n        participantsCount\\n        __typename\\n      }\\n      recurringType\\n      __typename\\n    }\\n    __typename\\n  }\\n  mission_web3: campaigns(input: $missionWeb3Input) {\\n    list {\\n      ...CampaignSnap\\n      id\\n      cap\\n      name\\n      childrenCampaigns {\\n        ...CampaignDetailFrag\\n        claimedLoyaltyPoints(address: $address)\\n        __typename\\n      }\\n      description\\n      thumbnail\\n      chain\\n      numNFTMinted\\n      tokenRewardContract {\\n        id\\n        address\\n        chain\\n        __typename\\n      }\\n      tokenReward {\\n        userTokenAmount\\n        tokenAddress\\n        depositedTokenAmount\\n        tokenRewardId\\n        tokenDecimal\\n        tokenLogo\\n        tokenSymbol\\n        __typename\\n      }\\n      space {\\n        id\\n        name\\n        thumbnail\\n        alias\\n        isVerified\\n        __typename\\n      }\\n      coHostSpaces {\\n        id\\n        name\\n        thumbnail\\n        alias\\n        isVerified\\n        __typename\\n      }\\n      rewardInfo {\\n        discordRole {\\n          guildId\\n          guildName\\n          roleId\\n          roleName\\n          inviteLink\\n          __typename\\n        }\\n        __typename\\n      }\\n      participants {\\n        participantsCount\\n        __typename\\n      }\\n      recurringType\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment CampaignSnap on Campaign {\\n  id\\n  name\\n  ...CampaignMedia\\n  dao {\\n    ...DaoSnap\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment DaoSnap on DAO {\\n  id\\n  name\\n  logo\\n  alias\\n  isVerified\\n  __typename\\n}\\n\\nfragment CampaignMedia on Campaign {\\n  thumbnail\\n  rewardName\\n  type\\n  gamification {\\n    id\\n    type\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment CampaignDetailFrag on Campaign {\\n  id\\n  ...CampaignMedia\\n  ...CampaignForgePage\\n  name\\n  numberID\\n  type\\n  cap\\n  info\\n  useCred\\n  formula\\n  status\\n  creator\\n  thumbnail\\n  gasType\\n  isPrivate\\n  createdAt\\n  requirementInfo\\n  description\\n  enableWhitelist\\n  chain\\n  startTime\\n  endTime\\n  requireEmail\\n  requireUsername\\n  blacklistCountryCodes\\n  whitelistRegions\\n  rewardType\\n  distributionType\\n  rewardName\\n  claimEndTime\\n  loyaltyPoints\\n  tokenRewardContract {\\n    id\\n    address\\n    chain\\n    __typename\\n  }\\n  tokenReward {\\n    userTokenAmount\\n    tokenAddress\\n    depositedTokenAmount\\n    tokenRewardId\\n    tokenDecimal\\n    tokenLogo\\n    tokenSymbol\\n    __typename\\n  }\\n  nftHolderSnapshot {\\n    holderSnapshotBlock\\n    __typename\\n  }\\n  spaceStation {\\n    id\\n    address\\n    chain\\n    __typename\\n  }\\n  ...WhitelistInfoFrag\\n  ...WhitelistSubgraphFrag\\n  gamification {\\n    ...GamificationDetailFrag\\n    __typename\\n  }\\n  creds {\\n    ...CredForAddress\\n    __typename\\n  }\\n  credentialGroups(address: $address) {\\n    ...CredentialGroupForAddress\\n    __typename\\n  }\\n  dao {\\n    ...DaoSnap\\n    nftCores {\\n      list {\\n        capable\\n        marketLink\\n        contractAddress\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  rewardInfo {\\n    discordRole {\\n      guildId\\n      guildName\\n      roleId\\n      roleName\\n      inviteLink\\n      __typename\\n    }\\n    premint {\\n      startTime\\n      endTime\\n      chain\\n      price\\n      totalSupply\\n      contractAddress\\n      banner\\n      __typename\\n    }\\n    loyaltyPoints {\\n      points\\n      __typename\\n    }\\n    loyaltyPointsMysteryBox {\\n      points\\n      weight\\n      __typename\\n    }\\n    __typename\\n  }\\n  participants {\\n    participantsCount\\n    bountyWinnersCount\\n    __typename\\n  }\\n  taskConfig(address: $address) {\\n    participateCondition {\\n      conditions {\\n        ...ExpressionEntity\\n        __typename\\n      }\\n      conditionalFormula\\n      eligible\\n      __typename\\n    }\\n    rewardConfigs {\\n      conditions {\\n        ...ExpressionEntity\\n        __typename\\n      }\\n      conditionalFormula\\n      description\\n      rewards {\\n        ...ExpressionReward\\n        __typename\\n      }\\n      eligible\\n      rewardAttrVals {\\n        attrName\\n        attrTitle\\n        attrVal\\n        __typename\\n      }\\n      __typename\\n    }\\n    referralConfig {\\n      conditions {\\n        ...ExpressionEntity\\n        __typename\\n      }\\n      conditionalFormula\\n      description\\n      rewards {\\n        ...ExpressionReward\\n        __typename\\n      }\\n      eligible\\n      rewardAttrVals {\\n        attrName\\n        attrTitle\\n        attrVal\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  referralCode(address: $address)\\n  recurringType\\n  latestRecurringTime\\n  __typename\\n}\\n\\nfragment CredForAddress on Cred {\\n  id\\n  name\\n  type\\n  credType\\n  credSource\\n  referenceLink\\n  description\\n  lastUpdate\\n  syncStatus\\n  credContractNFTHolder {\\n    timestamp\\n    __typename\\n  }\\n  chain\\n  eligible(address: $address)\\n  subgraph {\\n    endpoint\\n    query\\n    expression\\n    __typename\\n  }\\n  metadata {\\n    ...CredMetaData\\n    __typename\\n  }\\n  dimensionConfig\\n  value {\\n    gitcoinPassport {\\n      score\\n      lastScoreTimestamp\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment CredMetaData on CredMetadata {\\n  visitLink {\\n    link\\n    __typename\\n  }\\n  gitcoinPassport {\\n    score {\\n      title\\n      type\\n      description\\n      config\\n      __typename\\n    }\\n    lastScoreTimestamp {\\n      title\\n      type\\n      description\\n      config\\n      __typename\\n    }\\n    __typename\\n  }\\n  campaignReferral {\\n    count {\\n      title\\n      type\\n      description\\n      config\\n      __typename\\n    }\\n    __typename\\n  }\\n  restApi {\\n    url\\n    method\\n    headers {\\n      key\\n      value\\n      __typename\\n    }\\n    postBody\\n    expression\\n    __typename\\n  }\\n  walletBalance {\\n    contractAddress\\n    snapshotTimestamp\\n    chain\\n    balance {\\n      type\\n      title\\n      description\\n      config\\n      __typename\\n    }\\n    LastSyncBlock\\n    LastSyncTimestamp\\n    __typename\\n  }\\n  lensProfileFollow {\\n    handle\\n    __typename\\n  }\\n  graphql {\\n    url\\n    query\\n    expression\\n    __typename\\n  }\\n  lensPostUpvote {\\n    postId\\n    __typename\\n  }\\n  lensPostMirror {\\n    postId\\n    __typename\\n  }\\n  multiDimensionRest {\\n    url\\n    method\\n    headers {\\n      key\\n      value\\n      __typename\\n    }\\n    postBody\\n    expression\\n    dimensions {\\n      id\\n      type\\n      title\\n      description\\n      config\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment CredentialGroupForAddress on CredentialGroup {\\n  id\\n  description\\n  credentials {\\n    ...CredForAddress\\n    __typename\\n  }\\n  conditionRelation\\n  conditions {\\n    expression\\n    eligible\\n    ...CredentialGroupConditionForVerifyButton\\n    __typename\\n  }\\n  rewards {\\n    expression\\n    eligible\\n    rewardCount\\n    rewardType\\n    __typename\\n  }\\n  rewardAttrVals {\\n    attrName\\n    attrTitle\\n    attrVal\\n    __typename\\n  }\\n  claimedLoyaltyPoints\\n  __typename\\n}\\n\\nfragment CredentialGroupConditionForVerifyButton on CredentialGroupCondition {\\n  expression\\n  eligibleAddress\\n  __typename\\n}\\n\\nfragment WhitelistInfoFrag on Campaign {\\n  id\\n  whitelistInfo(address: $address) {\\n    address\\n    maxCount\\n    usedCount\\n    claimedLoyaltyPoints\\n    currentPeriodClaimedLoyaltyPoints\\n    currentPeriodMaxLoyaltyPoints\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment WhitelistSubgraphFrag on Campaign {\\n  id\\n  whitelistSubgraph {\\n    query\\n    endpoint\\n    expression\\n    variable\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment GamificationDetailFrag on Gamification {\\n  id\\n  type\\n  nfts {\\n    nft {\\n      id\\n      animationURL\\n      category\\n      powah\\n      image\\n      name\\n      treasureBack\\n      nftCore {\\n        ...NftCoreInfoFrag\\n        __typename\\n      }\\n      traits {\\n        name\\n        value\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  airdrop {\\n    name\\n    contractAddress\\n    token {\\n      address\\n      icon\\n      symbol\\n      __typename\\n    }\\n    merkleTreeUrl\\n    addressInfo(address: $address) {\\n      index\\n      amount {\\n        amount\\n        ether\\n        __typename\\n      }\\n      proofs\\n      __typename\\n    }\\n    __typename\\n  }\\n  forgeConfig {\\n    minNFTCount\\n    maxNFTCount\\n    requiredNFTs {\\n      nft {\\n        category\\n        powah\\n        image\\n        name\\n        nftCore {\\n          capable\\n          contractAddress\\n          __typename\\n        }\\n        __typename\\n      }\\n      count\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment NftCoreInfoFrag on NFTCore {\\n  id\\n  capable\\n  chain\\n  contractAddress\\n  name\\n  symbol\\n  dao {\\n    id\\n    name\\n    logo\\n    alias\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ExpressionEntity on ExprEntity {\\n  cred {\\n    id\\n    name\\n    type\\n    credType\\n    credSource\\n    referenceLink\\n    description\\n    lastUpdate\\n    chain\\n    eligible(address: $address)\\n    metadata {\\n      visitLink {\\n        link\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  attrs {\\n    attrName\\n    operatorSymbol\\n    targetValue\\n    __typename\\n  }\\n  attrFormula\\n  eligible\\n  __typename\\n}\\n\\nfragment ExpressionReward on ExprReward {\\n  arithmetics {\\n    ...ExpressionEntity\\n    __typename\\n  }\\n  arithmeticFormula\\n  rewardType\\n  rewardCount\\n  rewardVal\\n  __typename\\n}\\n\\nfragment CampaignForgePage on Campaign {\\n  id\\n  numberID\\n  chain\\n  spaceStation {\\n    address\\n    __typename\\n  }\\n  gamification {\\n    forgeConfig {\\n      maxNFTCount\\n      minNFTCount\\n      requiredNFTs {\\n        nft {\\n          category\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n"}',
      {
        headers: {
          accept: "*/*",
          "content-type": "application/json",
          "request-id": "f7c5c8db-2b22-4501-ad84-59a2b0e89540",
          "sec-ch-ua":
            '"Google Chrome";v="117", "Not;A=Brand";v="8", "Chromium";v="117"',
          "sec-ch-ua-mobile": "?0",
          "sec-ch-ua-platform": '"macOS"',
        },
      }
    );

    response = http.options("https://graphigo.prd.galaxy.eco/query", null, {
      headers: {
        accept: "*/*",
        "access-control-request-headers": "content-type,request-id",
        "access-control-request-method": "POST",
        origin: "https://galxe.com",
        "sec-fetch-mode": "cors",
      },
    });
    sleep(2);
  });
}
